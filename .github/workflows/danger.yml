name: CI

on:
    pull_request:
        types: [opened, reopened, edited, synchronize]
        paths:
            - ".github/workflows/swiftlint.yml"
            - ".swiftlint.yml"
            - "**/*.swift"
jobs:
    build:
        runs-on: macos-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Set up Ruby
              uses: ruby/setup-ruby@v1
              with:
                  ruby-version: 3.0.5

            # - name: Install danger-js
            #   run: brew install danger/tap/danger-js

            - name: Setup Homebrew
              run: |
                  HOMEBREW_CACHE=$HOME/Homebrew-Cache
                  mkdir -p $HOMEBREW_CACHE
                  curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C $HOMEBREW_CACHE
                  export PATH=$HOMEBREW_CACHE/bin:$PATH

            - name: Restore Homebrew Cache
              uses: actions/cache@v2
              with:
                  path: |
                      $HOME/Homebrew-Cache
                  key: brew-${{ runner.os }}-${{ hashFiles('**/*.rb') }}

            # - name: Install Dependencies
            #   run: brew install <your_formula_here>

            - name: Install Danger
              run: |
                  brew install danger/tap/danger-js
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Save Homebrew Cache
              uses: actions/cache@v2
              with:
                  path: |
                      $HOME/Homebrew-Cache
                  key: brew-${{ runner.os }}-${{ hashFiles('**/*.rb') }}

            - name: Cache RubyGems
              uses: actions/cache@v2
              with:
                  path: vendor/bundle
                  key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-gems-

            # - name: Bundle install
            #   run: |
            #       gem install bundler
            #       bundle config path vendor/bundle
            #       bundle install --jobs 4 --retry 3

            - name: Run Danger
              run: danger-swift ci
              env:
                  DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}

            - name: Delete old archives
              run: find ~/Library/Developer/Xcode/Archives -ctime +7 -maxdepth 1 -print0 -exec rm -f -r {} \;
